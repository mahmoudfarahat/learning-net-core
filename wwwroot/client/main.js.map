{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"../shared/Product\";\r\n@Injectable()\r\n\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n        \r\n    }\r\n    public products: Product[] = []\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<[]>(\"/api/product\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }))\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n    templateUrl: \"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","\r\n\r\n\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-9\">\r\n            <h2 class=\"text-center\">{{title}}</h2>\r\n            <product-list></product-list>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <h2 class=\"text-center\">Cart</h2>\r\n \r\n        </div>\r\n    </div>\r\n\r\n    \r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductListView\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n    providers: [\n        Store\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"," <div class=\"row\">\r\n     \r\n     <div *ngFor=\"let p of store.products\" class=\"col-md-3\">\r\n         <div class=\"border  bg-light rounded p-1 mb-3\">\r\n         <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid product-img\" alt=\"{{p.artist}}\" />\r\n             <h5> {{p.category}} - {{p.size}}</h5>\r\n             <ul class=\"products-props\">\r\n                 <li>Price:  {{ p.price | currency }}</li>\r\n                 <li>Artist:  {{ p.artist}}</li>\r\n                 <li>TItle:  {{ p.title}}</li>\r\n\r\n             </ul>\r\n             \r\n             <button id=\"buyButton\" class=\"btn btn-success\">Buy</button>\r\n         </div>\r\n\r\n     </div>\r\n </div>","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component(\r\n    {\r\n        selector: \"product-list\",\r\n        templateUrl: \"productListView.component.html\",\r\n        styleUrls: [\"productListView.component.css\"]\r\n    }\r\n)\r\n\r\nexport default class ProductListView implements OnInit{\r\n \r\n\r\n    constructor(public store: Store) {\r\n        \r\n    }\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(() => { })\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}